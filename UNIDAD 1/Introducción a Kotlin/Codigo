package com.example.miappdesdecero.CarpetaVAR

fun main() {
// TIPOS DE DATOS Y VARIABLE:
    /*
        Int: numeros enteros
        String: texto
        Double: numero decimal
        Float: numero decimal pero que lleva un f o F al final del numero
        Boolean: cuando un valor puede ser true o false
    */

// DEFINIR Y MOSTRAR VARIABLES
    val count: Int = 2
    println(count) // muestra el resultado de 2, solo usando la variable count
    println("You have $count unread messages.") // muestra un mensaje mas completo usando la variable count

// INFERENCIA DE TIPO DE DATO
// tipo int
    val count2 = 2 // se omite el tipo de dato porque se infiere de que se trata de un tipo entero
    println("You have $count2 unread messages.")

// tipo string
    val nextMeeting = "La proxima reunion es:"
    val date = "1 de enero"
    val reminder = nextMeeting + date
    println(reminder) // muestra: La proxima reunion es:1 de enero

// OPERACIONES MATEMATICAS BASICAS
// enteros
    val unreadCount = 5
    val readCount = 100
    println("Tienes ${unreadCount + readCount} mensajes en total en tu bandeja de entrada.") // se suman las variables definidas anteriormente
    val totalSuma = unreadCount + readCount
    println("Tienes $totalSuma mensajes en total en tu bandeja de entrada.") // tambien esta otra forma

// double, etc
    val trip1 = 3.20
    val trip2 = 4.10
    val trip3 = 1.72
    val totalTripLength = trip1 + trip2 + trip3
    println("$totalTripLength millas restantes hasta el destino")

// ACTUALIZAR UNA VARIABLE
    /*
        Palabra clave val: Úsala cuando esperes que el valor de la variable no cambie.
        Palabra clave var: Úsala cuando esperes que el valor de la variable pueda cambiar.
    */
// uso de var para cambiar el valor de la variable
    var cartTotal = 0
    println("Total: $cartTotal") // resultado 0

    cartTotal = 20
    println("Total: $cartTotal")// resultado 20

// NOTAS DE LAS FUNCIONES
    /*
        Cuando se define una función, se definen los parámetros que se le pasarán cuando se la llame.
        Cuando llamas a una función, debes pasar los argumentos para los parámetros.
    */

// USO DE FUNCIONES SIN RETORNO SIN PARAMETROS
    SaludoCumpleaños() // se hace el llamado a la funcion SaludoCumpleaños()

// USO DE FUNCIONES CON RETORNO SIN PARAMETROS
    val mostrar = NombreEdad()
    println(mostrar)
    println(NombreEdad()) // tambien funciona de esta manera

// USO DE FUNCIONES CON PARAMETROS
    println(MiNombreEdad("Hunter", 25)) // damos el argumento de "Hunter", tambien si deseas puedes pasar los argumentos con nombre

    /*
    ****************************************************
        UNIDAD 1:
        Introducción a Kotlin: PROBLEMAS PRACTICOS
    ****************************************************
    */
// 2.- Impresión de mensajes-----
    println("Use the val keyword when the value doesn't change.")
    println("Use the var keyword when the value can change.")
    println("When you define a function, you define the parameters that can be passed to it.")
    println("When you call a function, you pass arguments for the parameters.")

// 3.- Corrección de un error de compilación-----
// error anterior
// println("New chat message from a friend'}
// corregido
    println("New chat message from a friend")

// 4.- Plantillas de strings-----
// corregido
    var discountPercentage: Int = 0 // antes estaba como "val"
    var offer: String = "" // antes estaba como "val"
    val item = "Google Chromecast"
    discountPercentage = 20
    offer = "Sale - Up to $discountPercentage% discount on $item! Hurry up!"
    println(offer)

// 5.- Concatenación de strings-----
// corregido
    val numberOfAdults = 20 // antes estaba como "20"
    val numberOfKids = 30   // antes estaba como "30"
    val total = numberOfAdults + numberOfKids
    println("The total party size is: $total") // el resultado anterior era "2030" lo cual no era el valor esperado

// 7.- Implementación de operaciones matemáticas básicas-----
// corregido
    val firstNumber = 10
    val secondNumber = 5
    val result = firstNumber + secondNumber
    println("$firstNumber + $secondNumber = $result") // anteriormente la variable result no habia sido definido

// nos piden implementar el metodo add
    val N1 = 10
    val N2 = 5
    val N3 = 8

    val r1 = add(N1, N2)
    val r2 = add(N1, N3)

    println("$N1 + $N2 = $r1")
    println("$N1 + $N3 = $r2")


// 8.- Parámetros predeterminados-----
// nos piden implementar el metodo "displayAlertMessage()"
    val firstUserEmailId = "user_one@gmail.com"

// The following line of code assumes that you named your parameter as emailId.
// If you named it differently, feel free to update the name.
    println(displayAlertMessage(emailId = firstUserEmailId))
    println()

    val secondUserOperatingSystem = "Windows"
    val secondUserEmailId = "user_two@gmail.com"

    println(displayAlertMessage(secondUserOperatingSystem, secondUserEmailId))
    println()

    val thirdUserOperatingSystem = "Mac OS"
    val thirdUserEmailId = "user_three@gmail.com"

    println(displayAlertMessage(thirdUserOperatingSystem, thirdUserEmailId))
    println()

// 10.- Comparación de dos números-----
    println(Comparacion(300, 250))
    println(Comparacion(300, 300))
    println(Comparacion(200, 220))
    println()

// 11.- Movimiento del código duplicado a una función-----
    Clima("Ankara", 27, 31, 82)
    Clima("Tokyo", 36, 32, 10)
    Clima("Cape Town", 64, 59, 2)
    Clima("Guatemala City", 55, 50, 7)

}

fun Clima(ciudad: String, tmax: Int, tmin: Int, prob: Int) {
    println("City: $ciudad")
    println("Low temperature: $tmin, High temperature: $tmax")
    println("Chance of rain: $prob%")
    println()
}

fun Comparacion(hoy: Int, ayer: Int): Boolean {
    if(hoy > ayer)
        return true
    else
        return false
}

fun SaludoCumpleaños() { // opcional el Unit cuando no se especifica un tipo de datos
    println("¡Feliz cumpleaños, Rover!")
    println("¡Ya tienes 5 años!")
}

fun NombreEdad(): String { // retorna el tipo de dato de String
    val nombre = "Mi nombre es Hunter!"
    val edad = "Mi edad es de 22 años"
    return "$nombre \n $edad"
}

fun MiNombreEdad(name: String, edad: Int): String { // tambien existen los argumentos predeterminados
    return "Hola, me llamo $name \n Mi edad es $edad"
}

fun add(t1: Int, t2: Int): Int {
    return t1 + t2
}

fun displayAlertMessage(dato1: String = "Unknown OS", emailId: String): String{
    return "There's a new sign-in request on $dato1 for your Google Account $emailId."
}
